openapi: 3.0.0
info:
  title: TaskFlow API
  description: |
    Basic backend API using Express.js to allow users to manage their tasks.
    The system allows users to create, update, delete, and retrieve tasks. 
    Each task has a title, description, and status (e.g., "pending", "completed").
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      responses:
        '200':
          description: A list of all tasks
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    title: "Buy groceries"
                    description: "Milk, eggs, bread"
                    status: "pending"
                  - id: 2
                    title: "Write blog post"
                    description: "Finish the draft on Node.js"
                    status: "completed"
        '500':
          description: Server error

    post:
      tags:
        - Tasks
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
              properties:
                title:
                  type: string
                  example: "Finish assignment"
                description:
                  type: string
                  example: "Submit by 5 PM"
                status:
                  type: string
                  enum: ["pending", "completed"]
                  example: "pending"
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: "Finish assignment"
                  description: "Submit by 5 PM"
                  status: "pending"
        '400':
          description: Bad request (missing required fields)
        '500':
          description: Server error

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get a task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The task ID
      responses:
        '200':
          description: The task details
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: "Buy groceries"
                  description: "Milk, eggs, bread"
                  status: "pending"
        '404':
          description: Task not found
        '500':
          description: Server error

    put:
      tags:
        - Tasks
      summary: Update a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The task ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated task title"
                description:
                  type: string
                  example: "Updated description"
                status:
                  type: string
                  enum: ["pending", "completed"]
                  example: "completed"
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: "Updated task title"
                  description: "Updated description"
                  status: "completed"
        '400':
          description: Bad request (invalid input)
        '404':
          description: Task not found
        '500':
          description: Server error

    delete:
      tags:
        - Tasks
      summary: Delete a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The task ID
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Task deleted successfully"
        '404':
          description: Task not found
        '500':
          description: Server error
  /tasks/status/{status}:
    get:
      tags:
        - Tasks
      summary: Filter task by Status
      parameters:
        - in: path
          name: status
          required: true
          schema:
            type: string
          description: The task status
      responses:
        '200':
          description: The task details
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: "Buy groceries"
                  description: "Milk, eggs, bread"
                  status: "pending"
        '404':
          description: Task not found
        '500':
          description: Server error